package com.resort.ResortManagementProject.service;

import java.time.LocalDate;
import java.util.List;
import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.resort.ResortManagementProject.entity.Booking;
import com.resort.ResortManagementProject.entity.Room;
import com.resort.ResortManagementProject.repository.BookingRepository;
import com.resort.ResortManagementProject.repository.RoomRepository;


@Service
public class RoomService {
	
	@Autowired
	private RoomRepository roomRepo;
	
	@Autowired
	private BookingRepository bookingRepo;
	public Room saveRoomData(Room room) {
		Room saveRoom= roomRepo.save(room);
		return saveRoom;
	}

	public Room getRoomById(int id) {
		Optional<Room> findById = roomRepo.findById(id);
		Room room = findById.get();
		return room;
	}
	
	public List<Room> getAllRoomData(){
		List<Room> room= roomRepo.findAll();
		return room;
	}
	

	 
	import java.util.List;
	import java.util.stream.Collectors;

//	public List<Room> findAvailableRooms(String checkInDate, String checkOutDate, int capacity) {
//	    // Retrieve all rooms with capacity greater than or equal to the required capacity
//	    List<Room> roomsWithSufficientCapacity = RoomRepository.findByCapacityGreaterThanEqual(capacity);
//
//	    // Filter out rooms that are not available for the given check-in and check-out dates
//	    List<Room> availableRooms = roomsWithSufficientCapacity.stream()
//	            .filter(room -> {
//	                // Check if there are no bookings for the given room during the specified period
//	                boolean isAvailable = BookingRepository.findByRoomIdAndCheckInDateLessThanEqualAndCheckOutDateGreaterThanEqual(
//	                        room.getId(), checkOutDate, checkInDate).isEmpty();
//	                return isAvailable;
//	            })
//	            .collect(Collectors.toList());
//
//	    return availableRooms;
//	}
//	
//	 public List<Room> findAvailableRooms(int capacity, String availability) {
//	        return roomRepository.findByCapacityGreaterThanEqualAndAvailability(capacity, availability);
//	    }
