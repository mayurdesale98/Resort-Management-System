package com.resort.ResortManagementProject.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;

import com.resort.ResortManagementProject.entity.User;
import com.resort.ResortManagementProject.repository.UserRepository;

@Service
public class UserService {

	@Autowired
	private UserRepository userRepo;


	public List<User> getUsersByRole(String role) {

		return userRepo.findByuserRole(role);
	}

	public ResponseEntity<String> registerUser(User newUser) {
		if (userRepo.findByemail(newUser.getEmail()) != null || userRepo.findByphNo(newUser.getPhNo()) != null) {
			return ResponseEntity.status(HttpStatus.BAD_REQUEST)
					.body("User already exists with this email: " + newUser.getEmail());
		} else {
			userRepo.save(newUser);
			return ResponseEntity.status(HttpStatus.OK).body("User registered successfully");
		}

	}

	public ResponseEntity<User> loginUser(User loginUser) {
	    List<User> users = userRepo.findAll();
	    for (User user : users) {
	        if ((user.getEmail().equals(loginUser.getEmail()) || user.getPhNo().equals(loginUser.getPhNo()))
	                && user.getPassword().equals(loginUser.getPassword())) {
	            return ResponseEntity.status(HttpStatus.OK).body(user);
	        }
	    }
	    return (ResponseEntity<User>) ResponseEntity.status(HttpStatus.BAD_REQUEST);
	}
}
