package com.resort.ResortManagementProject.controller;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import com.resort.ResortManagementProject.entity.Room;
import com.resort.ResortManagementProject.service.RoomService;
import org.springframework.core.io.FileSystemResource;
import org.springframework.core.io.Resource;

@RestController
@RequestMapping("/room")
@CrossOrigin(origins = "*")
public class RoomController {
	
	@Autowired
	private RoomService roomService;

	
	 public static String uploadDirectory = System.getProperty("user.dir")+"\\src\\main\\webapp\\images";

		@GetMapping("/room/{id}")
		public ResponseEntity<Room> getRoomById(@PathVariable int id){
			Room room = roomService.getRoomById(id);
			return ResponseEntity.ok().body(room);
		}
		
		@GetMapping("/room/getProfileImage/{id}")
		public ResponseEntity<Resource> getProfileImage(@PathVariable int id) throws IOException{
			Room room = roomService.getRoomById(id);
			
			Path imgPath =Paths.get(uploadDirectory, room.getRoomImage());
			
			Resource resource = new FileSystemResource(imgPath.toFile());
			
			String contentType = Files.probeContentType(imgPath);
			
			return ResponseEntity.ok().contentType(MediaType.parseMediaType(contentType)).body(resource);	
		}
		
		
		@GetMapping("/room/AllRoomData")
		public List<Room> getAllRoomData(){
			List<Room> allRoom = roomService.getAllRoomData();
			return allRoom;
		}

	
}
