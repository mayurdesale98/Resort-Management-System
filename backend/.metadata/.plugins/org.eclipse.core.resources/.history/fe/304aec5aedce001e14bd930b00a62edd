package com.resort.ResortManagementProject.controller;

import java.io.IOException;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.resort.ResortManagementProject.entity.ImageUtil;
import com.resort.ResortManagementProject.entity.Room;
import com.resort.ResortManagementProject.entity.RoomImg;
import com.resort.ResortManagementProject.service.RoomService;

@RestController
@RequestMapping("/room")
@CrossOrigin(origins = "*")
public class RoomController {
	
	@Autowired
	private RoomService roomService;
	
	@PutMapping("/updRoom/{roomId}")
    public ResponseEntity<String> updateRoom(@PathVariable int roomId, @RequestBody Room updatedRoom) {
		Optional<Room> oldRoom=roomService.getRoomById(roomId);
			if(oldRoom.isPresent()) {
				Room room=oldRoom.get();
				roomService.updateRoom(room,updatedRoom);
				return ResponseEntity.status(HttpStatus.OK).body("Room details updated Successfully");
			}
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Room details not found to update");
			
    }
	
	@DeleteMapping("/delRoom/{roomId}")
	public ResponseEntity<String> deleteRoom(@PathVariable int roomId){
		Optional<Room> delRoom=roomService.getRoomById(roomId);
		if(delRoom.isPresent()) {
			
			return ResponseEntity.status(HttpStatus.OK).body("Room details deleted Successfully");
		}
		return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Room details not found to delete");
	}
	
	@GetMapping("/getRoooms")
	public List<Room> getAllrooms(){
		
		return roomService.getAllrooms();
	}

	
}
